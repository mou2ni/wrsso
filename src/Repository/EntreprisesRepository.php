<?php

namespace App\Repository;

use App\Entity\Clients;
use App\Entity\Entreprises;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * ClientsRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */

class EntreprisesRepository extends ServiceEntityRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Entreprises::class);
    }


    public function liste($offset,$limit = 10)
    {
        $qb = $this->createQueryBuilder('e')
            ->orderBy('e.id', 'ASC')
            ->setFirstResult($offset)
            ->setMaxResults($limit)
            //->getQuery()
            //->getResult()
            ;
        $pag = new Paginator($qb);

        return $pag;
    }

    public function findDetailsEntreprise($structure = 'YESBO')
    {
        $qb = $this->createQueryBuilder('e')
            //->innerJoin('pc.entreprise', 'e', 'WITH', 'pc.entreprise = e.id')
            ->innerJoin('e.collaborateurs', 'c', 'WITH', 'c.entreprise = e.id')
            ->select('e.code as code','c.nom as nomRepresentant','c.prenom as prenomRepresentant','c.qualite as qualiteRepresentant','e.adresse')
            ->where('c.estRepresentant =:representant')
            ->andWhere('e.code =:structure')
            ->setParameter('representant',true)
            ->setParameter('structure',$structure)
            ->getQuery()
            ->getOneOrNullResult()
        ;
        return $qb;
    }

}
